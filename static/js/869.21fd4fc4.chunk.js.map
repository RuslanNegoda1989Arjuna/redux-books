{"version":3,"file":"static/js/869.21fd4fc4.chunk.js","mappings":"wMA2CA,UApCuB,WAAO,IAADA,EACzBC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEbI,GAAMC,EAAAA,EAAAA,MAAND,GACDE,GAAWC,EAAAA,EAAAA,MAGXC,GAAqB,QAAdX,GAFIY,EAAAA,EAAAA,MAEKC,aAAK,IAAAb,OAAA,EAAdA,EAAgBW,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEWC,EAAAA,EAAAA,IAAYrB,GAAI,KAAD,EAAAc,EAAAI,EAAAI,KAA7BP,EAAID,EAAJC,KACPhB,EAAQgB,GAAMG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEXF,EAAQE,EAAAK,GAARP,SACHQ,QAAQC,IAAIT,EAASD,KAAKW,SAAS,yBAAAR,EAAAS,OAAA,GAAAd,EAAA,kBAE1C,kBARc,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAUfrB,GACJ,GAAG,CAACR,IAIJ,OACI8B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UAAQC,QAJD,WAAH,OAAShC,EAASE,EAAM,EAIJ4B,SAAC,aACzBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAElC,EAAKqC,SACjCF,EAAAA,EAAAA,KAAA,KAAAD,SAAIlC,EAAKsC,QACTH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAC/B,MAAO,CAACF,KAAAA,GAAOkC,GAAG,WAAUN,SAAC,cACnCC,EAAAA,EAAAA,KAACM,EAAAA,GAAM,MAGnB,C,mICvCMC,E,QAAgBC,EAAAA,OAAa,CAC/BC,QAAS,+CAGAC,EAAW,WACpB,OAAOH,EAAcI,IAAI,IAC7B,EAEaC,EAAc,SAACC,GAAiB,IAAdC,EAAKlB,UAAAmB,OAAA,QAAAC,IAAApB,UAAA,GAAAA,UAAA,GAAG,EACnC,OAAOW,EAAcI,IAAI,IAAK,CAC1BM,OAAQ,CACJJ,EAAAA,EACAC,MAAAA,EACAI,OAAQ,IAGpB,EAEa9B,EAAc,SAACrB,GACxB,OAAOwC,EAAcI,IAAI,IAADQ,OAAKpD,GACjC,EAEaqD,EAAkB,SAACrD,GAC5B,OAAOwC,EAAcI,IAAI,IAADQ,OAAKpD,EAAE,aACnC,C","sources":["pages/SinglePostPage/SinglePostPage.jsx","shared/api/posts.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport { Link, Outlet, useParams, useNavigate, useLocation } from \"react-router-dom\";\n\nimport { getPostById } from \"../../shared/api/posts\";\n\n// import styles from \"./single-post-page.module.scss\";\n\nconst SinglePostPage = () => {\n    const [post, setPost] = useState({});\n\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const from = location.state?.from || \"/\";\n\n    useEffect(()=> {\n        const fetchPost = async() => {\n            try {\n                const {data} = await getPostById(id);\n                setPost(data);\n            }\n            catch({response}) {\n                console.log(response.data.message);\n            }\n        }\n\n        fetchPost();\n    }, [id])\n\n    const goBack = () => navigate(from);\n\n    return (\n        <div className=\"container\">\n            <button onClick={goBack}>Go back</button>\n            <h1 className=\"page-title\">{post.title}</h1>\n            <p>{post.body}</p>\n            <Link state={{from}} to=\"comments\">Comments</Link>\n            <Outlet />\n        </div>\n    )\n}\n\nexport default SinglePostPage;","import axios from \"axios\";\n\nconst postsInstance = axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\n})\n\nexport const getPosts = ()=> {\n    return postsInstance.get(\"/\")\n}\n\nexport const searchPosts = (q, _page = 1)=> {\n    return postsInstance.get(\"/\", {\n        params: {\n            q,\n            _page,\n            _limit: 4,\n        }\n    })\n}\n\nexport const getPostById = (id) => {\n    return postsInstance.get(`/${id}`);\n}\n\nexport const getPostComments = (id) => {\n    return postsInstance.get(`/${id}/comments`);\n}"],"names":["_location$state","_useState","useState","_useState2","_slicedToArray","post","setPost","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchPost","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getPostById","data","response","wrap","_context","prev","next","getPostById","sent","t0","console","log","message","stop","apply","arguments","_jsxs","className","children","_jsx","onClick","title","body","Link","to","Outlet","postsInstance","axios","baseURL","getPosts","get","searchPosts","q","_page","length","undefined","params","_limit","concat","getPostComments"],"sourceRoot":""}