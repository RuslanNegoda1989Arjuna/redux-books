{"version":3,"file":"static/js/333.cc5851ee.chunk.js","mappings":"6LAsCA,UAjCqB,WACjB,IAAAA,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAErBI,GAAMC,EAAAA,EAAAA,MAAND,IAEPE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,IAAgBhB,GAAI,KAAD,EAAAS,EAAAI,EAAAI,KAAjCP,EAAID,EAAJC,KACPX,EAAYW,GAAMG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEfF,EAAQE,EAAAK,GAARP,SACHQ,QAAQC,IAAIT,EAASD,KAAKW,SAAS,yBAAAR,EAAAS,OAAA,GAAAd,EAAA,kBAE1C,kBARkB,OAAAJ,EAAAmB,MAAA,KAAAC,UAAA,KAUnBrB,GACJ,GAAG,CAACH,IAEJ,IAAMyB,EAAW3B,EAAS4B,KAAI,SAAAC,GAAA,IAAE3B,EAAE2B,EAAF3B,GAAI4B,EAAID,EAAJC,KAAMC,EAAIF,EAAJE,KAAI,OAC1CC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,WAASH,EAAK,QACjBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIF,MAFC7B,EAGJ,IAGT,OACIgC,EAAAA,EAAAA,KAAA,MAAAD,SACKN,GAGb,C,mIClCMQ,E,QAAgBC,EAAAA,OAAa,CAC/BC,QAAS,+CAGAC,EAAW,WACpB,OAAOH,EAAcI,IAAI,IAC7B,EAEaC,EAAc,SAACC,GAAiB,IAAdC,EAAKhB,UAAAiB,OAAA,QAAAC,IAAAlB,UAAA,GAAAA,UAAA,GAAG,EACnC,OAAOS,EAAcI,IAAI,IAAK,CAC1BM,OAAQ,CACJJ,EAAAA,EACAC,MAAAA,EACAI,OAAQ,IAGpB,EAEaC,EAAc,SAAC7C,GACxB,OAAOiC,EAAcI,IAAI,IAADS,OAAK9C,GACjC,EAEagB,EAAkB,SAAChB,GAC5B,OAAOiC,EAAcI,IAAI,IAADS,OAAK9C,EAAE,aACnC,C","sources":["pages/CommentsPage/CommentsPage.jsx","shared/api/posts.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getPostComments } from \"../../shared/api/posts\";\n\nconst CommentsPage = () => {\n    const [comments, setComments] = useState([]);\n\n    const {id} = useParams();\n\n    useEffect(()=> {\n        const fetchComments = async() => {\n            try {\n                const {data} = await getPostComments(id);\n                setComments(data);\n            }\n            catch({response}) {\n                console.log(response.data.message);\n            }\n        }\n\n        fetchComments();\n    }, [id])\n\n    const elements = comments.map(({id, name, body}) => (\n        <li key={id}>\n            <p>Author: {name}.</p>\n            <p>{body}</p>\n        </li>\n    ))\n\n    return (\n        <ol>\n            {elements}\n        </ol>\n    )\n}\n\nexport default CommentsPage;","import axios from \"axios\";\n\nconst postsInstance = axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\n})\n\nexport const getPosts = ()=> {\n    return postsInstance.get(\"/\")\n}\n\nexport const searchPosts = (q, _page = 1)=> {\n    return postsInstance.get(\"/\", {\n        params: {\n            q,\n            _page,\n            _limit: 4,\n        }\n    })\n}\n\nexport const getPostById = (id) => {\n    return postsInstance.get(`/${id}`);\n}\n\nexport const getPostComments = (id) => {\n    return postsInstance.get(`/${id}/comments`);\n}"],"names":["_useState","useState","_useState2","_slicedToArray","comments","setComments","id","useParams","useEffect","fetchComments","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$getPostComment","data","response","wrap","_context","prev","next","getPostComments","sent","t0","console","log","message","stop","apply","arguments","elements","map","_ref3","name","body","_jsxs","children","_jsx","postsInstance","axios","baseURL","getPosts","get","searchPosts","q","_page","length","undefined","params","_limit","getPostById","concat"],"sourceRoot":""}