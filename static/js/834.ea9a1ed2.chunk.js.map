{"version":3,"file":"static/js/834.ea9a1ed2.chunk.js","mappings":"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","sources":["modules/PostsSearch/PostsSearchForm/PostsSearchForm.jsx","webpack://redux-books/./src/modules/PostsSearch/posts-search.module.scss?10ce","modules/PostsSearch/PostsSearch.jsx","pages/PostsPage/PostsPage.jsx","shared/api/posts.js","webpack://redux-books/./src/shared/components/PostList/post-list.module.scss?60f6","shared/components/PostList/PostList.jsx"],"sourcesContent":["import { Component } from \"react\";\n\nclass PostsSearchForm extends Component {\n    state = {\n        search: \"\"\n    }\n\n    handleChange = ({ target }) => {\n        const { name, value, checked, type } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        this.setState({\n            [name]: newValue\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {onSubmit} = this.props;\n        onSubmit({...this.state});\n        this.reset();\n    }\n\n    reset() {\n        this.setState({ search: \"\" })\n    }\n\n    render() {\n        const {search} = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input name=\"search\" value={search} onChange={this.handleChange} placeholder=\"Search post\" required />\n                <button type=\"submit\">Search</button>\n            </form>\n        )\n    }\n}\n\nexport default PostsSearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"posts-search_heading__f1nWL\",\"list\":\"posts-search_list__xGgji\",\"item\":\"posts-search_item__15JJV\",\"itemTitle\":\"posts-search_itemTitle__tRVvp\",\"error\":\"posts-search_error__jnmRK\",\"detailsTitle\":\"posts-search_detailsTitle__1xd8J\",\"detailsContent\":\"posts-search_detailsContent__axegk\"};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nimport PostList from \"../../shared/components/PostList/PostList\";\n\nimport PostsSearchForm from \"./PostsSearchForm/PostsSearchForm\";\n\nimport { searchPosts } from \"../../shared/api/posts\";\n\nimport styles from \"./posts-search.module.scss\";\n\nconst PostsSearch = ()=> {\n    const [items, setItems] = useState([]);\n    const [status, setStatus] = useState(\"idle\");\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const search = searchParams.get(\"search\");\n    const page = Number(searchParams.get(\"page\"));\n\n    useEffect(()=> {\n        const fetchPosts = async() => {\n            try {\n                setStatus(\"pending\");\n                const { data } = await searchPosts(search, page);\n                setItems(prevItems => [...prevItems, ...data]);\n                setStatus(\"success\");\n            }\n            catch ({ response }) {\n                const errorMessage = response.data.message || \"Cannot fetch posts\";\n                setError(errorMessage);\n                setStatus(\"error\");\n            }\n        }\n        \n        if(search) {\n            fetchPosts()\n        }\n    }, [search, page])\n\n    const updateSearch = ({ search }) => {\n        setSearchParams({\n            search,\n            page: 1,\n        })\n        setItems([]);\n    }\n\n    const loadMore = () => {\n        setSearchParams({\n            search,\n            page: page + 1,\n        })\n    };\n\n    return (\n        <>\n            <h2 className={styles.heading}>Posts</h2>\n            <PostsSearchForm onSubmit={updateSearch} />\n            {status === \"pending\" && <p>....Loading</p>}\n            {error && <p className={styles.error}>{error}</p>}\n            <PostList items={items} />\n            {status === \"success\" && !items.length && <p>Nothing found</p>}\n            {Boolean(items.length) && <button onClick={loadMore} type=\"button\">Load more</button>}\n        </>\n    )\n}\n\nexport default PostsSearch;\n","import PostsSearch from \"../../modules/PostsSearch/PostsSearch\";\n\n// import styles from \"./posts-page.module.scss\";\n\nconst PostsPage = () => {\n    return (\n        <div className=\"container\">\n            <h1 className=\"page-title\">Posts page</h1>\n            <PostsSearch />\n        </div>\n    )\n}\n\nexport default PostsPage;","import axios from \"axios\";\n\nconst postsInstance = axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\n})\n\nexport const getPosts = ()=> {\n    return postsInstance.get(\"/\")\n}\n\nexport const searchPosts = (q, _page = 1)=> {\n    return postsInstance.get(\"/\", {\n        params: {\n            q,\n            _page,\n            _limit: 4,\n        }\n    })\n}\n\nexport const getPostById = (id) => {\n    return postsInstance.get(`/${id}`);\n}\n\nexport const getPostComments = (id) => {\n    return postsInstance.get(`/${id}/comments`);\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"post-list_list__Ic3M3\",\"item\":\"post-list_item__ECXwH\",\"itemTitle\":\"post-list_itemTitle__2wnZn\"};","import { Link, useLocation } from \"react-router-dom\";\n\nimport styles from \"./post-list.module.scss\";\n\nconst PostList = ({ items = [] }) => {\n    const location = useLocation();\n    \n    const elements = items.map(({ id, title, body }) => (\n        <li key={id} className={styles.item}>\n            <Link to={`/posts/${id}`} state={{from: location}} className={styles.itemTitle}>{title}</Link>\n            <p>{body}</p>\n        </li>\n    ))\n\n    return (\n        <ul className={styles.list}>\n            {elements}\n        </ul>\n    )\n}\n\nexport default PostList;"],"names":["PostsSearchForm","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","search","handleChange","_ref","target","name","value","checked","newValue","type","setState","_defineProperty","handleSubmit","e","preventDefault","onSubmit","props","_objectSpread","reset","_createClass","key","this","_jsxs","children","_jsx","onChange","placeholder","required","Component","_useState","useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","status","setStatus","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","page","Number","useEffect","fetchPosts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$searchPosts","data","response","errorMessage","wrap","_context","prev","next","searchPosts","sent","prevItems","_toConsumableArray","t0","message","stop","_Fragment","className","styles","_ref3","PostList","Boolean","onClick","PostsSearch","postsInstance","axios","baseURL","getPosts","q","_page","undefined","params","_limit","getPostById","id","getPostComments","_ref$items","location","useLocation","elements","map","_ref2","title","body","Link","to","from"],"sourceRoot":""}