{"version":3,"file":"static/js/308.baf85a67.chunk.js","mappings":"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","sources":["webpack://redux-books/./src/modules/MyBooks/MyBooksBlock/my-books-block.module.scss?970b","modules/MyBooks/MyBooksBlock/MyBooksBlock.jsx","webpack://redux-books/./src/modules/MyBooks/MyBooksList/my-books-list.module.scss?db50","modules/MyBooks/MyBooksList/MyBooksList.jsx","modules/MyBooks/MyBooksForm/initialState.js","webpack://redux-books/./src/modules/MyBooks/MyBooksForm/my-books-form.module.scss?85c4","modules/MyBooks/MyBooksForm/MyBooksForm.jsx","redux/filter/selector-filter.js","webpack://redux-books/./src/modules/MyBooks/my-books.module.scss?41db","modules/MyBooks/MyBooks.jsx","pages/MyBooksPage/MyBooksPage.jsx","redux/books/selectors-book.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"my-books-block_wrapper__4werz\",\"title\":\"my-books-block_title__ronQH\"};","import styles from \"./my-books-block.module.scss\";\n\nconst MyBooksBlock = ({title, children}) => {\n    return (\n        <div className={styles.wrapper}>\n            <h4 className={styles.title}>{title}</h4>\n            {children}\n        </div>\n    )\n}\n\nexport default MyBooksBlock;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"my-books-list_list__Ul5Ey\",\"listItem\":\"my-books-list_listItem__ls4j5\"};","import styles from \"./my-books-list.module.scss\";\n\nconst MyBooksList = ({ items, onDeleteBook }) => {\n    const elements = items.map(({ id, title, author }) => (\n        <li className={styles.listItem} key={id}>\n            Title: {title}. Author: {author}. <button onClick={() => onDeleteBook(id)}>delete</button>\n        </li>\n    ))\n\n    return (\n        <ol className={styles.list}>\n            {elements}\n        </ol>\n    )\n}\n\nexport default MyBooksList;","const initialState =  {\n    title: \"\",\n    author: \"\",\n    favorite: false,\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"my-books-form_form__OTVfh\",\"formGroup\":\"my-books-form_formGroup__jIOQW\",\"textField\":\"my-books-form_textField__vX2pI\",\"checkbox\":\"my-books-form_checkbox__rLGp9\"};","import { useState, useEffect, useRef } from \"react\";\n\nimport initialState from \"./initialState\";\n\nimport styles from \"./my-books-form.module.scss\";\n\nconst MyBooksForm = ({onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const titleRef = useRef(false);\n\n    useEffect(()=> {\n        titleRef.current.focus();\n    }, [])\n\n    const handleChange = ({ target }) => {\n        setState(prevState => {\n            const { name, value, checked, type } = target;\n            const newValue = type === \"checkbox\" ? checked : value;\n\n            return {...prevState, [name]: newValue}\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState})\n    }\n\n    const {title, author, favorite} = state;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <div className={styles.formGroup}>\n                <label>Book title</label>\n                <input ref={titleRef} value={title} name=\"title\" onChange={handleChange} className={styles.textField} placeholder=\"Book title\" required />\n            </div>\n            <div className={styles.formGroup}>\n                <label>Book author</label>\n                <input value={author} name=\"author\" onChange={handleChange} className={styles.textField} placeholder=\"Book author\" required />\n            </div>\n            <div className={styles.formGroup}>\n                <label>Favorite</label>\n                <input checked={favorite} name=\"favorite\" onChange={handleChange} className={styles.checkbox} type=\"checkbox\" />\n            </div>\n            <button type=\"submit\">Add book</button>\n        </form>\n    )\n}\n\nexport default MyBooksForm;\n/*\nclass MyBooksForm extends Component {\n    state = {...initialState}\n\n    handleChange = ({ target }) => {\n        const { name, value, checked, type } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        this.setState({\n            [name]: newValue\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {onSubmit} = this.props;\n        onSubmit({...this.state});\n        this.reset();\n    }\n\n    reset() {\n        this.setState({ ...initialState })\n    }\n\n    render() {\n        const {title, author, favorite} = this.state;\n\n        return (\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n                <div className={styles.formGroup}>\n                    <label>Book title</label>\n                    <input value={title} name=\"title\" onChange={this.handleChange} className={styles.textField} placeholder=\"Book title\" required />\n                </div>\n                <div className={styles.formGroup}>\n                    <label>Book author</label>\n                    <input value={author} name=\"author\" onChange={this.handleChange} className={styles.textField} placeholder=\"Book author\" required />\n                </div>\n                <div className={styles.formGroup}>\n                    <label>Favorite</label>\n                    <input checked={favorite} name=\"favorite\" onChange={this.handleChange} className={styles.checkbox} type=\"checkbox\" />\n                </div>\n                <button type=\"submit\">Add book</button>\n            </form>\n        )\n    }\n}\n*/\n","export const getFilter = store => store.filter;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"my-books_wrapper__xNfn-\",\"title\":\"my-books_title__pA0Zx\",\"blocks\":\"my-books_blocks__8EL-y\"};","import { useSelector, useDispatch } from \"react-redux\";\n\nimport MyBooksBlock from \"./MyBooksBlock/MyBooksBlock\";\nimport MyBooksList from \"./MyBooksList/MyBooksList\";\nimport MyBooksForm from \"./MyBooksForm/MyBooksForm\";\n\nimport { addBook, deleteBook } from \"../../redux/books/books-slice\";\nimport { setFilter } from \"../../redux/filter/filter-slice\";\n\nimport { getBooks, getFilteredBooks } from \"../../redux/books/selectors-book\";\nimport { getFilter } from \"../../redux/filter/selector-filter\";\n\nimport styles from \"./my-books.module.scss\";\n\nconst MyBooks = () => {\n    const books = useSelector(getBooks);\n    const filteredBooks = useSelector(getFilteredBooks);\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    const isDublicate = ({title, author}) => {\n        const normalizedTitle = title.toLowerCase();\n        const normalizedAuthor = author.toLowerCase();\n        const dublicate = books.find(item => {\n            return (item.title.toLowerCase() === normalizedTitle && item.author.toLowerCase() === normalizedAuthor)\n        });\n\n        return Boolean(dublicate);\n    }\n\n    const handleFilter = ({ target }) => {\n        dispatch(setFilter(target.value));\n    }\n\n    const onAddBook = ({title, author, favorite}) => {\n        if(isDublicate({title, author})) {\n            return alert(`${title} - ${author} is already exist`);\n        }\n        dispatch(addBook({title, author, favorite}));\n    }\n\n    const onDeleteBook = (id) => {\n        dispatch(deleteBook(id));\n    }\n\n\n    return (\n        <div className={styles.wrapper}>\n            <h3 className={styles.title}>My Books</h3>\n            <div className={styles.blocks}>\n                <MyBooksBlock title=\"Add book\">\n                    <MyBooksForm onSubmit={onAddBook} />\n                </MyBooksBlock>\n                <MyBooksBlock title=\"Book list\">\n                    <input value={filter} name=\"filter\" onChange={handleFilter} className={styles.textField} placeholder=\"enter book title or author\" />\n                    <MyBooksList items={filteredBooks} onDeleteBook={onDeleteBook}  />\n                </MyBooksBlock>\n            </div>\n        </div>\n    )\n}\n\nexport default MyBooks;\n\n","import MyBooks from \"../../modules/MyBooks/MyBooks\";\n\nconst MyBooksPage = () => {\n    return (\n        <div className=\"container\">\n            <h1 className=\"page-title\">My books page</h1>\n            <MyBooks />\n        </div>\n    )\n}\n\nexport default MyBooksPage;","export const getBooks = store => store.books;\n\nexport const getFavoriteBooks = store => {\n    return store.books.filter(({ favorite }) => favorite);\n}\n\nexport const getFilteredBooks = store => {\n    const { filter, books } = store;\n    if (!filter) {\n        return books;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const result = books.filter(({ title, author }) => {\n        return( title.toLowerCase().includes(normalizedFilter) || author.toLowerCase().includes(normalizedFilter))\n    })\n    return result;\n}"],"names":["_ref","title","children","_jsxs","className","styles","_jsx","items","onDeleteBook","elements","map","_ref2","id","author","onClick","favorite","onSubmit","_useState","useState","_objectSpread","initialState","_useState2","_slicedToArray","state","setState","titleRef","useRef","useEffect","current","focus","handleChange","target","prevState","name","value","checked","newValue","type","_defineProperty","e","preventDefault","ref","onChange","placeholder","required","getFilter","store","filter","books","useSelector","getBooks","filteredBooks","getFilteredBooks","dispatch","useDispatch","MyBooksBlock","MyBooksForm","_ref3","normalizedTitle","toLowerCase","normalizedAuthor","dublicate","find","item","Boolean","isDublicate","alert","concat","addBook","setFilter","MyBooksList","deleteBook","MyBooks","getFavoriteBooks","normalizedFilter","includes"],"sourceRoot":""}